"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolarHalfYear = void 0;
var SolarMonth_1 = require("./SolarMonth");
var ExactDate_1 = require("./ExactDate");
var SolarHalfYear = (function () {
    function SolarHalfYear(year, month) {
        this._year = year;
        this._month = month;
        this._calendar = ExactDate_1.ExactDate.fromYmd(year, month, 1);
    }
    SolarHalfYear.fromYm = function (year, month) {
        return new SolarHalfYear(year, month);
    };
    SolarHalfYear.fromDate = function (date) {
        return SolarHalfYear.fromYm(date.getFullYear(), date.getMonth() + 1);
    };
    SolarHalfYear.prototype.getYear = function () {
        return this._year;
    };
    SolarHalfYear.prototype.getMonth = function () {
        return this._month;
    };
    SolarHalfYear.prototype.getIndex = function () {
        return Math.ceil(this._month / 6);
    };
    SolarHalfYear.prototype.next = function (halfYears) {
        if (0 === halfYears) {
            return SolarHalfYear.fromYm(this._year, this._month);
        }
        var date = ExactDate_1.ExactDate.fromYmd(this._year, this._month, 1);
        date.setMonth(date.getMonth() + 6 * halfYears);
        return SolarHalfYear.fromDate(date);
    };
    SolarHalfYear.prototype.getMonths = function () {
        var l = [];
        var index = this.getIndex() - 1;
        for (var i = 0; i < 6; i++) {
            l.push(SolarMonth_1.SolarMonth.fromYm(this._year, 6 * index + i + 1));
        }
        return l;
    };
    SolarHalfYear.prototype.toString = function () {
        return "".concat(this.getYear(), ".").concat(this.getIndex());
    };
    SolarHalfYear.prototype.toFullString = function () {
        var name = ['上', '下'][this.getIndex() - 1];
        return "".concat(this.getYear(), "\u5E74").concat(name, "\u534A\u5E74");
    };
    return SolarHalfYear;
}());
exports.SolarHalfYear = SolarHalfYear;
//# sourceMappingURL=SolarHalfYear.js.map