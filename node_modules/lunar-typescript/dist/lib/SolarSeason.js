"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolarSeason = void 0;
var SolarMonth_1 = require("./SolarMonth");
var ExactDate_1 = require("./ExactDate");
var SolarSeason = (function () {
    function SolarSeason(year, month) {
        this._year = year;
        this._month = month;
        this._calendar = ExactDate_1.ExactDate.fromYmd(year, month, 1);
    }
    SolarSeason.fromYm = function (year, month) {
        return new SolarSeason(year, month);
    };
    SolarSeason.fromDate = function (date) {
        return SolarSeason.fromYm(date.getFullYear(), date.getMonth() + 1);
    };
    SolarSeason.prototype.getYear = function () {
        return this._year;
    };
    SolarSeason.prototype.getMonth = function () {
        return this._month;
    };
    SolarSeason.prototype.getIndex = function () {
        return Math.ceil(this._month / 3);
    };
    SolarSeason.prototype.next = function (seasons) {
        if (0 === seasons) {
            return SolarSeason.fromYm(this._year, this._month);
        }
        var date = ExactDate_1.ExactDate.fromYmd(this._year, this._month, 1);
        date.setMonth(date.getMonth() + 3 * seasons);
        return SolarSeason.fromDate(date);
    };
    SolarSeason.prototype.getMonths = function () {
        var l = [];
        var index = this.getIndex() - 1;
        for (var i = 0; i < 3; i++) {
            l.push(SolarMonth_1.SolarMonth.fromYm(this._year, 3 * index + i + 1));
        }
        return l;
    };
    SolarSeason.prototype.toString = function () {
        return "".concat(this.getYear(), ".").concat(this.getIndex());
    };
    SolarSeason.prototype.toFullString = function () {
        return "".concat(this.getYear(), "\u5E74").concat(this.getIndex(), "\u5B63\u5EA6");
    };
    return SolarSeason;
}());
exports.SolarSeason = SolarSeason;
//# sourceMappingURL=SolarSeason.js.map